

# This file was *autogenerated* from the file solution.sage
from sage.all_cmdline import *   # import sage library

_sage_const_30096958377823307344276367017724943142170975078802650818143933627150359255661 = Integer(30096958377823307344276367017724943142170975078802650818143933627150359255661); _sage_const_56531144904142883065234161377668110910856172044580012975940857599903617985286 = Integer(56531144904142883065234161377668110910856172044580012975940857599903617985286); _sage_const_21507298446547656840016447680790423102532194062582695389690425422459852733173 = Integer(21507298446547656840016447680790423102532194062582695389690425422459852733173); _sage_const_66872845102634800095194804323292128799390830238101159557106523891532898612969 = Integer(66872845102634800095194804323292128799390830238101159557106523891532898612969); _sage_const_55050607273829649843374110220932064895049236288913105740752070826027409604815 = Integer(55050607273829649843374110220932064895049236288913105740752070826027409604815); _sage_const_45091367725206111459410271425165636938443626712829884565641125657569454510832 = Integer(45091367725206111459410271425165636938443626712829884565641125657569454510832); _sage_const_54791705160577724001003464276848213135459641235327751549543250894403651764097 = Integer(54791705160577724001003464276848213135459641235327751549543250894403651764097); _sage_const_14376907169561193103819851186898175664798425624149020885136013861087154210472 = Integer(14376907169561193103819851186898175664798425624149020885136013861087154210472); _sage_const_59739408369370470768375899476530732759814450750589489697354231781544638855150 = Integer(59739408369370470768375899476530732759814450750589489697354231781544638855150); _sage_const_31493930540551805039179360828058615321360278998652511835119415329918286114209 = Integer(31493930540551805039179360828058615321360278998652511835119415329918286114209); _sage_const_12345 = Integer(12345); _sage_const_4096 = Integer(4096)
from socket import socket

def lcg_recover():
    x1 = _sage_const_30096958377823307344276367017724943142170975078802650818143933627150359255661 
    x2 = _sage_const_56531144904142883065234161377668110910856172044580012975940857599903617985286 
    x3 = _sage_const_21507298446547656840016447680790423102532194062582695389690425422459852733173 
    q = _sage_const_66872845102634800095194804323292128799390830238101159557106523891532898612969 
    
    a = (x2 - x3) * inverse_mod(x1 - x2, q) % q
    # b = -(a * x1 - x2) % q

    return a, q

def break_schnorr():
    # 3 consecutive signatures
    a, q = lcg_recover()
    s1 = _sage_const_55050607273829649843374110220932064895049236288913105740752070826027409604815 
    e1 = _sage_const_45091367725206111459410271425165636938443626712829884565641125657569454510832 

    s2 = _sage_const_54791705160577724001003464276848213135459641235327751549543250894403651764097 
    e2 = _sage_const_14376907169561193103819851186898175664798425624149020885136013861087154210472 

    s3 = _sage_const_59739408369370470768375899476530732759814450750589489697354231781544638855150 
    e3 = _sage_const_31493930540551805039179360828058615321360278998652511835119415329918286114209 

    # Solving system of congruences
    x = -(a*(s2 - s1) - (s3 - s2)) * inverse_mod(a * (e2 - e1) - (e3 - e2), q) % q
    return x

if __name__ == "__main__":
    x = str(break_schnorr())
    # Connect to server and pwn
    r = socket()
    r.connect(("161.35.232.27", _sage_const_12345 ))
    r.recv(_sage_const_4096 )
    r.send(b"3\n")
    r.recv(_sage_const_4096 )
    r.send(bytes(x, "utf8") + b"\n")
    print(r.recv(_sage_const_4096 ))

